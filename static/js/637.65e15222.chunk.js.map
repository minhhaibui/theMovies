{"version":3,"file":"static/js/637.65e15222.chunk.js","mappings":"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","sources":["components/movies/MovieCard.js","page/MovieDetailsPage.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../button/Button\";\r\nconst MovieCard = ({ item }) => {\r\n  const { title, release_date, poster_path, vote_average, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"movie-card flex flex-col text-white p-3 bg-slate-800 rounded-lg h-full select-none\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] rounded-lg mb-5 object-cover\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h2 className=\"font-bold text-xl mb-3\">{title}</h2>\r\n        <div className=\"flex justify-between text-sm opacity-50 mb-10\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button bgColor=\"secondary\" onClick={() => navigate(`/movie/${id}`)}>\r\n          {\" \"}\r\n          Watch Now\r\n        </Button>\r\n        {/* <button\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n          className=\"py-3 px-6 w-full bg-primary rounded-lg capitalize mt-auto\"\r\n        >\r\n          Watch now\r\n        </button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { apiKey, fetcher, tmdbAPI } from \"../config/config\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport MovieCard from \"../components/movies/MovieCard\";\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const [movieDetail, setMovieDetail] = useState([]);\r\n  const { data } = useSWR(tmdbAPI.getMovieDetail(movieId), fetcher);\r\n  useEffect(() => {\r\n    if (data) setMovieDetail(data);\r\n  }, [data]);\r\n  const { backdrop_path, poster_path, title, genres, overview } = movieDetail;\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-[600px] relative\">\r\n        <div className=\" absolute inset-0 bg-black bg-opacity-60\"></div>\r\n        <div\r\n          className=\"w-full h-full bg-cover bg-no-repeat\"\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${backdrop_path})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\r\n          alt=\"\"\r\n          className=\"w-full h-full object-cover rounded-xl\"\r\n        />\r\n      </div>\r\n      <h2 className=\" text-center text-white font-bold text-4xl mb-10 \">\r\n        {title}\r\n      </h2>\r\n      {genres && (\r\n        <div className=\"flex items-center justify-center gap-x-5 mb-10\">\r\n          {genres.map((item) => (\r\n            <span\r\n              className=\"py-2 px-4 border-primary text-primary border rounded\"\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center leading-relaxed max-w-[600px] mx-auto mb-10\">\r\n        {overview}\r\n      </p>\r\n      <MovieCredits></MovieCredits>\r\n      <MovieVideo></MovieVideo>\r\n      <MovieSimilar></MovieSimilar>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction MovieCredits() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.length <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\r\n      <div className=\"grid grid-cols-4 gap-5\">\r\n        {cast.slice(0, 4).map((item) => (\r\n          <div className=\"cast-item\" key={item.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${item.profile_path}`}\r\n              className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\r\n              alt=\"\"\r\n            />\r\n            <h3 className=\"text-xl text-center font-medium\">{item.name}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieVideo() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  // console.log(\"video\", data);\r\n  return (\r\n    <div className=\"py-10\">\r\n      <div className=\"flex flex-col gap-10\">\r\n        {results.slice(0, 2).map((item) => (\r\n          <div className=\"\" key={item.id}>\r\n            <h3 className=\"mb-5 text-xl font-medium p-3 bg-primary inline-block\">\r\n              {item.name}\r\n            </h3>\r\n            <div key={item.id} className=\"w-full aspect-video\">\r\n              <iframe\r\n                width=\"864\"\r\n                height=\"486\"\r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                title=\"YouTube video player\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                className=\"w-full h-full object-fill\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  console.log(\"movie similar\", data);\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-3xl font-medium mb-10 \">Movies Similar</h2>\r\n      <div className=\"movie-list\">\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetailsPage;\r\n"],"names":["_ref","item","title","release_date","poster_path","vote_average","id","navigate","useNavigate","_jsxs","className","children","_jsx","src","concat","alt","Date","getFullYear","Button","bgColor","onClick","MovieCredits","movieId","useParams","data","useSWR","tmdbAPI","fetcher","cast","length","slice","map","profile_path","name","MovieVideo","results","width","height","key","frameBorder","allow","allowFullScreen","MovieSimilar","console","log","Swiper","grabCursor","spaceBetween","slidesPerView","SwiperSlide","MovieCard","_useState","useState","_useState2","_slicedToArray","movieDetail","setMovieDetail","useEffect","backdrop_path","genres","overview","_Fragment","style","backgroundImage"],"sourceRoot":""}